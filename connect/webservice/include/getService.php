<?php ob_start();////Check for authenticate user	//Retrieve Logged In user Data after loginrequire_once("Rest.inc.php");    class getService extends REST {        public function __construct(){					}                /* 		 *	Simple login API		 *  Login must be POST method		 */        public function check_email_password($username, $password, $conn){            $Query="SELECT * FROM user_master WHERE email='". $username ."' AND password='". md5($password) ."' OR password='$password'";            $result = $this->retrive_data($Query,$conn);            $User_count = mysqli_num_rows($result);            return $User_count;        }               public function check_user($email,$conn){            $Query="SELECT * FROM user_master WHERE email='".$email."' AND status=1";            $result = $this->retrive_data($Query,$conn);            $User_count = mysqli_num_rows($result);            return $User_count;            //echo $User_count; die;        }                /////////////// Code To Get Current Location //////////////        public function getaddress($latitude,$longitude){            $url = 'http://maps.googleapis.com/maps/api/geocode/json?latlng='.trim($lat).','.trim($lng).'&sensor=false';            $json = @file_get_contents($url);            $data=json_decode($json);            $status = $data->status;            if($status=="OK"){                return $data->results[0]->formatted_address;            }            else{                return false;            }        }        /////////////// End Code To Get Current Location /////////////                        ////////////////////////////////////////////////////////////////////////////////        /////////////////////////////////////////Retrieve Login Records/////////////////        ////////////////////////////////////////////////////////////////////////////////                        public function get_login($username, $password, $latitude, $longitude, $source_id, $ip_device, $conn){            $query = "SELECT * FROM user_master WHERE email='". $username ."' AND password='". md5($password) ."' OR password='$password'";            $result=$this->retrive_data($query,$conn);            $result_count = mysqli_num_rows($result);            if($result_count > 0 ){                $data=  mysqli_fetch_assoc($result);                $status=$data['status'];                if($status==0){                    $statusmessage = "User Not Verified";                    $error = array('status' => "0", "msg" => $statusmessage);                    ($_REQUEST['format']=='xml')?$this->response($this->xmlStatus($error), 200):$this->response($this->json($error), 200);                }                else if($status==9){                    $statusmessage = "User Not Exist";                    $error = array('status' => "0", "msg" => $statusmessage);                    ($_REQUEST['format']=='xml')?$this->response($this->xmlStatus($error), 200):$this->response($this->json($error), 200);                }                else if($status==8){                    $statusmessage = "User Suspended";                    $error = array('status' => "0", "msg" => $statusmessage);                    ($_REQUEST['format']=='xml')?$this->response($this->xmlStatus($error), 200):$this->response($this->json($error), 200);                }                else if($status==1){                    $statusmessage = "User Successfully Login";                    $posts['user_id']=$data['id'];                    $posts['custom_id']=$data['custom_id'];                    $user_id=$posts['user_id'];                    $posts['first_name']=$data['first_name'];                    $posts['last_name']=$data['last_name'];                    $posts['email']=$data['email'];                    $posts['gender']=$data['gender'];                    $posts['registration_no']=$data['registration_no'];                    $posts['mobile']=$data['mobile'];                    $posts['date_of_birth']=$data['date_of_birth'];                    $posts['country']=$data['country'];                    $posts['city']=$data['city'];                    $posts['state']=$data['state'];                    $posts['profile_pic']=$data['profile_pic_path'];                    $posts['user_auth_key']=$data['user_auth_key'];                                        // Insert Into Login History Table                    $query="INSERT INTO login_history SET user_id='$user_id', source_id='$source_id', ip_device='$ip_device', latitude='$latitude', longitude='$longitude', login_date_time=now()";                    $result = $this->retrive_data($query,$conn);                    $message = array('status' => "1", "msg" => $statusmessage);                    $posts_data=array_merge($posts, $message);                    ($_REQUEST['format']=='xml')?$this->response($this->xml($posts_data), 200):$this->response($this->json($posts_data), 200);                }			            }            else{                $statusmessage = "Either Email or Password is wrong";                $error = array('status' => "0", "msg" => $statusmessage);                ($_REQUEST['format']=='xml')?$this->response($this->xmlStatus($error), 200):$this->response($this->json($error), 200);            }        }        ///////////////////////// End Code For Retrive Login Records ///////////////////                ///////////////////////// Admin Login ///////////////////////////        public function admin_login($username, $password, $conn){            $query = "SELECT * FROM admin_master WHERE user_name='". $username ."' AND password='". md5($password) ."' OR password='$password'";            $result=$this->retrive_data($query,$conn);            $result_count = mysqli_num_rows($result);            if($result_count > 0 ){                $data = mysqli_fetch_assoc($result);                $posts['admin_id'] = $data['id'];                $posts['admin_email'] = $data['user_name'];                $posts['admin_type'] = $data['user_type'];                $statusmessage = "Admin Successfully Login";                $message = array('status' => "1", "msg" => $statusmessage);                $posts_data=array_merge($posts, $message);                ($_REQUEST['format']=='xml')?$this->response($this->xml($posts_data), 200):$this->response($this->json($posts_data), 200);             }             else{                $statusmessage = "Either Email or Password is wrong";                $error = array('status' => "0", "msg" => $statusmessage);                ($_REQUEST['format']=='xml')?$this->response($this->xmlStatus($error), 200):$this->response($this->json($error), 200);             }                    }        ///////////////////////// Admin Login ///////////////////////////                ///////////////////////// Get Source ///////////////////////////        public function get_source($conn){            $query = "SELECT * FROM source_master";            $result=$this->retrive_data($query,$conn);            $result_count = mysqli_num_rows($result);            if($result_count > 0 ){                for($i=0;$i<$result_count;$i++){                    $data = mysqli_fetch_assoc($result);                    $posts[$i]['source_id'] = $data['id'];                    $posts[$i]['source_name'] = $data['source_name'];                }                $statusmessage = "Got The List Successfully";                $message = array('status' => "1", "msg" => $statusmessage);                $posts_data=array_merge($posts, $message);                ($_REQUEST['format']=='xml')?$this->response($this->xml($posts_data), 200):$this->response($this->json($posts_data), 200);            }            else{                $statusmessage = "Source Not Found";                $error = array('status' => "0", "msg" => $statusmessage);                ($_REQUEST['format']=='xml')?$this->response($this->xmlStatus($error), 200):$this->response($this->json($error), 200);            }        }        ///////////////////////// Get Source ///////////////////////////                      ////////////////// Code For facebook SignUP ///////////////////            public function sign_up_facebook($email,$pic1,$first_name,$last_name,$user_name,$gender,$dob,$login_type,$latitude,$longitude,$source_id,$conn){                   $max_id_query = "SELECT max(id) FROM signup";                $result_max_id = $this->retrive_data($max_id_query,$conn);                $max_id_data = mysqli_fetch_assoc($result_max_id);                $max_id = $max_id_data['max(id)']+1;                $user_auth_key = time().$max_id;                $query="INSERT into signup SET first_name='".$first_name."',last_name='".$last_name."',email='".$email."',user_name='".$user_name."',gender='".$gender."',dob='".$dob."',latitude='".$latitude."',longitude='".$longitude."',source='".$source_id."',status=1,created_on=now(),verified=1,user_auth_key=$user_auth_key";                $result = $this->retrive_data($query,$conn);                $affected_rows=  mysqli_affected_rows($conn);                if($affected_rows>0){                    $query_detail = "SELECT * FROM signup WHERE email='$email'";                    $result_data = $this->retrive_data($query_detail,$conn);                    $result_count = mysqli_num_rows($result_data);                    if($result_count > 0 ){                        $data=  mysqli_fetch_assoc($result_data);                        $id=$data['id'];                        $posts['user_id']=$id;                        $posts['first_name']=$data['first_name'];                        $posts['last_name']=$data['last_name'];                        $posts['user_name']=$data['user_name'];                        $posts['email']=$data['email'];                        $posts['gender']=$data['gender'];                        $posts['user_auth_key']=$data['user_auth_key'];                        $query="INSERT INTO login_history SET user_id='$id',time=now(),latitude='$latitude',longitude='$longitude',source='$source_id'";                        $result = $this->retrive_data($query,$conn);                        $message = array("status" => "1", "msg" => "User Created Successfully");                        $posts_data=array_merge($posts, $message);                        ($_REQUEST['format']=='xml')?$this->response($this->publicxml($posts_data), 200):$this->response($this->publicjson($posts_data), 200);                    }                    else{                        $message = array('status' => "0", "msg" => "Email Not Exist");                        ($_REQUEST['format'] == 'xml') ? $this->response($this->xml($message), 200) : $this->response($this->json($message), 200);                    }                }                else{                    $message = array('status' => "0", "msg" => "User Not Created");                    ($_REQUEST['format'] == 'xml') ? $this->response($this->xml($message), 200) : $this->response($this->json($message), 200);                }            }    /////////////////// End Code For Facebook Login //////////////////////////////                ////// Code To Activate Facebook user account  of the user ////////////////                   public function activate_facebook_account($email,$first_name,$user_id,$about_user,$gender,$birth_date=NULL,$pic1){                    $gender_new = ucfirst(substr($gender, 0,1));                    if($birth_date!= NULL){                        $birth_date = explode("/", $birth_date);                        //get age from date or birthdate                        $age = (date("md", date("U", mktime(0, 0, 0, $birth_date[1], $birth_date[0], $birth_date[2]))) > date("md")                          ? ((date("Y") - $birth_date[2]) - 1)                          : (date("Y") - $birth_date[2]));                    }                    else{                        $age ='';                    }                                    $query = "UPDATE user SET active_status=1,del_status=0,age='$age',about_user='$about_user',first_name='$first_name',gender='$gender_new',pic1='$pic1' WHERE email='$email'";                $result = $this->retrive_data($query);                //   Code to activate all the friend relation of the activating user                $query_friends = "UPDATE friends_relations SET status =1 WHERE friend_request_sent_by='".$user_id."' OR friend_request_received_by='".$user_id."'";                $result_friends = $this->retrive_data($query_friends);                //   Code to activate all events of the activating user                $query_event = "UPDATE event SET active_status=1, del_status=0 WHERE created_by='".$user_id."'";                $result_event = $this->retrive_data($query_event);                //  Code To activate all the event relations of the activating user                $query_event_relation = "UPDATE user_event_relation SET status=1 WHERE user_id='".$user_id."'";                $result_event_relation = $this->retrive_data($query_event_relation);                if($result != false && $result_friends !=false && $result_event != false && $result_event_relation != false ){                    return true;                }                else{                    return false;                }                            }        ///// End Code To Activate Facebook user account of the user ///////////                    ////////////////// Code To Sign in face book ///////////////////////////                     public function sign_in_facebook($email,$pic1,$first_name,$last_name,$user_name,$gender,$dob,$latitude,$longitude,$source_id,$conn){                 $query = "SELECT * FROM signup WHERE email='$email'";                $result=$this->retrive_data($query,$conn);                $result_count = mysqli_num_rows($result);                if($result_count > 0 ){                    $data=  mysqli_fetch_assoc($result);                    $status=$data['status'];                    $verified=$data['verified'];                    if($status==0){                        $statusmessage = "User not exist";                        $error = array('status' => "0", "msg" => $statusmessage);                        ($_REQUEST['format']=='xml')?$this->response($this->xmlStatus($error), 200):$this->response($this->json($error), 200);                    }                    else if($status==1 && $verified==1){                        $statusmessage = "User successfully login";                        $posts['user_id']=$data['id'];                        $user_id=$posts['user_id'];                        $posts['first_name']=$data['first_name'];                        $posts['last_name']=$data['last_name'];                        $posts['user_name']=$data['user_name'];                        $posts['email']=$data['email'];                        $posts['gender']=$data['gender'];                        $posts['user_auth_key']=$data['user_auth_key'];                        $query="INSERT INTO login_history SET user_id='$user_id',time=now(),latitude='$latitude',longitude='$longitude',source='$source_id'";                        $result = $this->retrive_data($query,$conn);                        $message = array('status' => "1", "msg" => $statusmessage);                        $posts_data=array_merge($posts, $message);                        ($_REQUEST['format']=='xml')?$this->response($this->xml($posts_data), 200):$this->response($this->json($posts_data), 200);                    }                    else if($status==1 && $verified==0){                        $statusmessage = "User not verified";                        $error = array('status' => "0", "msg" => $statusmessage);                        ($_REQUEST['format']=='xml')?$this->response($this->xmlStatus($error), 200):$this->response($this->json($error), 200);                    }  				                }                else{                    $statusmessage = "Either Email or Password is wrong";                    $error = array('status' => "0", "msg" => $statusmessage);                    ($_REQUEST['format']=='xml')?$this->response($this->xmlStatus($error), 200):$this->response($this->json($error), 200);                }            }        //////////////// End Code To sign in facebook for ///////////////////////////                        /////////////////////// Code For checking Authentication //////////////////////        public function CheckAuthentication($user_id, $user_auth_key, $conn){            $query = "SELECT * FROM user_master WHERE user_auth_key='".$user_auth_key."' OR custom_id='$user_id'";            $result = $this->retrive_data($query,$conn);            $Count_val = mysqli_num_rows($result);            if($Count_val >0){                return true;            }else{                return false;            }        }        ////////////////////// End Code For Checking Authentication ////////////                ///////////////////////// Code To Get the Profile detail of the user ///        public function get_profile($user_id, $source_user_id, $source_id, $ip_device, $latitude, $longitude, $conn){            // Code to get user details........                        // Get serialised data            $query = "SELECT data FROM serialize_user WHERE user_id='$user_id' OR custom_id='$user_id'";            $result = $this->retrive_data($query,$conn);            $result_count = mysqli_num_rows($result);            if($result_count>0){                // Get Profile Tracking                $query_tracking = "INSERT INTO view_profile_tracking SET source_id='$source_id',ip_device='$ip_device',                                   source_user_id='$source_user_id',destination_user_id='$user_id',latitude='$latitude',                                   longitude='$longitude',datetime=now()";                $result_tracking = $this->retrive_data($query_tracking,$conn);                // End                $get_result=mysqli_fetch_assoc($result);                $json_decode_data = json_decode($get_result['data'],true);                //print_r($get_result['data']);die;                                // Get Freind status                $query_find = "SELECT * FROM connection WHERE (requester_id='$source_user_id' AND requestee_id='$user_id' AND approved='1') OR (requester_id='$user_id' AND requestee_id='$source_user_id'  AND approved='1')";                $result_find = $this->retrive_data($query_find, $conn);                $result_count_find = mysqli_num_rows($result_find);                if($result_count_find==1){                    $friend_status = 1;                }                else{                    $friend_status = 0;                }                // End                $json_decode_data_new = array_merge($json_decode_data,array("friend_status" => $friend_status));                $message = array("status" => "1", "msg" => "Got the list successfully");                $posts_data=array_merge($json_decode_data_new,$message);                ($_REQUEST['format']=='xml')?$this->response($this->publicxml($posts_data), 200):$this->response($this->publicjson($posts_data), 200);            }            else{                $message = array('status' => "0", "msg" => "Data Not Found");                ($_REQUEST['format'] == 'xml') ? $this->response($this->xml($message), 200) : $this->response($this->json($message), 200);            }            //            $query="SELECT id, first_name, last_name, registration_no, practicing_since, appointment_contact, office_contact, email, mobile, date_of_birth, country, city,//                    state, bio, language, contact_note, profile_pic_path, gender, youtube_url, twitter_url,//                    linkedin_url FROM user_master WHERE id='$user_id' OR custom_id='$user_id' AND status=1";//            $result = $this->retrive_data($query,$conn);//            $result_count = mysqli_num_rows($result);//            if($result_count>0){//                $query_tracking = "INSERT INTO view_profile_tracking SET source_id='$source_id',ip_device='$ip_device',//                                    source_user_id='$source_user_id',destination_user_id='$user_id',latitude='$latitude',//                                    longitude='$longitude',datetime=now()";//                $result_tracking = $this->retrive_data($query_tracking,$conn);//                //                $get_result=mysqli_fetch_assoc($result);//                $posts['user_id']=$get_result['id'];//                $user_id = $get_result['id'];//                $posts['first_name']=$get_result['first_name'];//                $posts['last_name']=$get_result['last_name'];//                $posts['registration_no']=$get_result['registration_no'];//                $posts['practice_since']=$get_result['practicing_since'];//                $posts['appointment_contact']=$get_result['appointment_contact'];//                $posts['office_contact']=$get_result['office_contact'];//                $posts['email']=$get_result['email'];//                $posts['mobile']=$get_result['mobile'];//                $posts['dob']=$get_result['date_of_birth'];//                $posts['country']=$get_result['country'];//                $posts['city']=$get_result['city'];//                $posts['state']=$get_result['state'];//                $posts['bio']=$get_result['bio'];//                $posts['language']=$get_result['language'];//                $posts['contact_note']=$get_result['contact_note'];//                $posts['profile_pic']=$get_result['profile_pic_path'];//                $posts['gender']=$get_result['gender'];//                $posts['youtube_url']=$get_result['youtube_url'];//                $posts['twitter_url']=$get_result['twitter_url'];//                $posts['linkedin_url']=$get_result['linkedin_url'];//                //                // Get Specialities//                $query_speciality = "SELECT id, speciality_name FROM speciality_master WHERE user_id='$user_id' AND status=1";//                $result_speciality = $this->retrive_data($query_speciality,$conn);//                $result_speciality_count = mysqli_num_rows($result_speciality);//                if($result_speciality_count>0){//                    for($i=0;$i<$result_speciality_count;$i++){//                        $get_speciality_result=mysqli_fetch_assoc($result_speciality);//                        $posts['speciality'][$i]['speciality_id']=$get_speciality_result['id'];//                        $posts['speciality'][$i]['speciality_name']=$get_speciality_result['speciality_name'];//                    }//                }//                else{//                    $posts['speciality']=NULL;//                }//                // End//                //                // Get Interests//                $query_interest = "SELECT id, interest_name FROM interests_master WHERE user_id='$user_id' AND status=1";//                $result_interest = $this->retrive_data($query_interest,$conn);//                $result_interest_count = mysqli_num_rows($result_interest);//                if($result_interest_count>0){//                    for($i=0;$i<$result_interest_count;$i++){//                        $get_interest_result=mysqli_fetch_assoc($result_interest);//                        $posts['interest'][$i]['interest_id']=$get_interest_result['id'];//                        $posts['interest'][$i]['interest_name']=$get_interest_result['interest_name'];//                    }//                }//                else{//                    $posts['interest']=NULL;//                }//                // End//                //                // Get Association //                $query_association = "SELECT id, association_name, position, location, time_period_start_date, time_period_end_date,//                                      description FROM association_master WHERE user_id='$user_id' AND status=1 ORDER BY time_period_start_date DESC";//                $result_association = $this->retrive_data($query_association,$conn);//                $result_association_count = mysqli_num_rows($result_association);//                if($result_association_count>0){//                    for($i=0;$i<$result_association_count;$i++){//                        $get_association_result=mysqli_fetch_assoc($result_association);//                        $posts['association'][$i]['association_id']=$get_association_result['id'];//                        $posts['association'][$i]['association_name']=$get_association_result['association_name'];//                        $posts['association'][$i]['position']=$get_association_result['position'];//                        $posts['association'][$i]['location']=$get_association_result['location'];//                        $posts['association'][$i]['start_date']=$get_association_result['time_period_start_date'];//                        $posts['association'][$i]['end_date']=$get_association_result['time_period_end_date'];//                        $posts['association'][$i]['description']=$get_association_result['description'];//                        $posts['association'][$i]['association_pic']=NULL;//                    }//                }//                else{//                    $posts['association']=NULL;//                }//                // End//                //                // Get Education//                $query_education = "SELECT id, school, attended_start_date, attended_end_date, degree, field_of_study,//                                    grade, activities_and_societies, description FROM education_master WHERE user_id='$user_id' AND status=1 ORDER BY attended_start_date DESC";//                $result_education = $this->retrive_data($query_education,$conn);//                $result_education_count = mysqli_num_rows($result_education);//                if($result_education_count>0){//                    for($i=0;$i<$result_education_count;$i++){//                        $get_education_result=mysqli_fetch_assoc($result_education);//                        $posts['education'][$i]['education_id']=$get_education_result['id'];//                        $posts['education'][$i]['school']=$get_education_result['school'];//                        $posts['education'][$i]['start_date']=$get_education_result['attended_start_date'];//                        $posts['education'][$i]['end_date']=$get_education_result['attended_end_date'];//                        $posts['education'][$i]['degree']=$get_education_result['degree'];//                        $posts['education'][$i]['field_of_study']=$get_education_result['field_of_study'];//                        $posts['education'][$i]['grade']=$get_education_result['grade'];//                        $posts['education'][$i]['activities_and_societies']=$get_education_result['activities_and_societies'];//                        $posts['education'][$i]['description']=$get_education_result['description'];//                        $posts['education'][$i]['education_pic']=NULL;//                    }//                }//                else{//                    $posts['education']=NULL;//                }//                // End//                //                // Get Award//                $query_award = "SELECT id, title, description, date, award_pic, live_link FROM award_master WHERE user_id='$user_id' AND status=1";//                $result_award = $this->retrive_data($query_award,$conn);//                $result_award_count = mysqli_num_rows($result_award);//                if($result_award_count>0){//                    for($i=0;$i<$result_award_count;$i++){//                        $get_award_result=mysqli_fetch_assoc($result_award);//                        $posts['award'][$i]['award_id']=$get_award_result['id'];//                        $posts['award'][$i]['title']=$get_award_result['title'];//                        $posts['award'][$i]['description']=$get_award_result['description'];//                        $posts['award'][$i]['date']=$get_award_result['date'];//                        $posts['award'][$i]['award_pic']=$get_award_result['award_pic'];//                        $posts['award'][$i]['live_link']=$get_award_result['live_link'];//                    }//                }//                else{//                    $posts['award']=NULL;//                }//                // End//                //                // Get Research//                $query_research = "SELECT id, title, summary FROM research_master WHERE user_id='$user_id' AND status=1";//                $result_research = $this->retrive_data($query_research,$conn);//                $result_research_count = mysqli_num_rows($result_research);//                if($result_research_count>0){//                    for($i=0;$i<$result_research_count;$i++){//                        $get_research_result=mysqli_fetch_assoc($result_research);//                        $research_id = $get_research_result['id'];//                        $posts['research'][$i]['research_id']=$get_research_result['id'];//                        $posts['research'][$i]['title']=$get_research_result['title'];//                        $posts['research'][$i]['summary']=$get_research_result['summary'];//                        //                        // Get Project//                        $query_project = "SELECT id, research_id, title, description, caption, project_image_path, file_path, project_link FROM project_master WHERE research_id='$research_id' AND status=1";//                        $result_project = $this->retrive_data($query_project,$conn);//                        $result_project_count = mysqli_num_rows($result_project);//                        if($result_project_count>0){//                            for($j=0;$j<$result_project_count;$j++){//                                $get_project_result=mysqli_fetch_assoc($result_project);//                                $posts['research'][$i]['project'][$j]['project_id']=$get_project_result['id'];//                                $posts['research'][$i]['project'][$j]['research_id']=$get_project_result['research_id'];//                                $posts['research'][$i]['project'][$j]['title']=$get_project_result['title'];//                                $posts['research'][$i]['project'][$j]['description']=$get_project_result['description'];//                                $posts['research'][$i]['project'][$j]['caption']=$get_project_result['caption'];//                                $posts['research'][$i]['project'][$j]['project_image_path']=$get_project_result['project_image_path'];//                                $posts['research'][$i]['project'][$j]['file_path']=$get_project_result['file_path'];//                                $posts['research'][$i]['project'][$j]['project_link']=$get_project_result['project_link'];//                            }//                        }//                        else{//                            $posts['research'][$i]['project']=NULL;//                        }//                        // End//                        //                    }//                }//                else{//                    $posts['research']=NULL;//                }//                // End//                $message = array("status" => "1", "msg" => "Got the list successfully");//                $posts_data=array_merge($posts,$message);//                ($_REQUEST['format']=='xml')?$this->response($this->publicxml($posts_data), 200):$this->response($this->publicjson($posts_data), 200);//            }//            else{//                $message = array('status' => "0", "msg" => "Either User Not Exist or Not Active");//                ($_REQUEST['format'] == 'xml') ? $this->response($this->xml($message), 200) : $this->response($this->json($message), 200);//            }        }        ////////////////// End code To Get the Profile details of the user /////             ////////////////// Code To Get Doctor List //////////////////        public function get_doctor_list($conn){            $query="SELECT id, first_name, last_name, email, registration_no, mobile, country, city, state, user_auth_key, status FROM user_master";            $result = $this->retrive_data($query,$conn);            $result_count = mysqli_num_rows($result);            if($result_count>0){                for($i=0;$i<$result_count;$i++){                    $data=  mysqli_fetch_assoc($result);                    $posts[$i]['user_id']=$data['id'];                    $posts[$i]['first_name']=$data['first_name'];                    $posts[$i]['last_name']=$data['last_name'];                    $posts[$i]['email']=$data['email'];                    $posts[$i]['registration_no']=$data['registration_no'];                    $posts[$i]['mobile']=$data['mobile'];                    $posts[$i]['country']=$data['country'];                    $posts[$i]['city']=$data['city'];                    $posts[$i]['state']=$data['state'];                    $posts[$i]['user_status']=$data['status'];                    $posts[$i]['auth_key']=$data['user_auth_key'];                }                $message = array("status" => "1", "msg" => "Got the list successfully");                $posts_data=array_merge($posts,$message);                ($_REQUEST['format']=='xml')?$this->response($this->publicxml($posts_data), 200):$this->response($this->publicjson($posts_data), 200);            }            else{                $message = array('status' => "0", "msg" => "Doctors Not Found");                ($_REQUEST['format'] == 'xml') ? $this->response($this->xml($message), 200) : $this->response($this->json($message), 200);            }        }        ////////////////// End Code To Get Doctor List ////////////////                 ////////////////// Code To Get Total Count ////////////////////        public function get_total_count($conn){            $query1="SELECT count(*) AS total_user FROM signup";            $query2="SELECT count(*) AS total_event FROM events";            $query3="SELECT count(*) AS total_genre FROM genre_master";            $result1 = $this->retrive_data($query1,$conn);            $result2 = $this->retrive_data($query2,$conn);            $result3 = $this->retrive_data($query3,$conn);            $data1=mysqli_fetch_assoc($result1);            $data2=mysqli_fetch_assoc($result2);            $data3=mysqli_fetch_assoc($result3);            $posts['total_user']=$data1['total_user'];            $posts['total_event']=$data2['total_event'];            $posts['total_genre']=$data3['total_genre'];            $message = array("status" => "1", "msg" => "Got the list successfully");            $posts_data=array_merge($posts,$message);            ($_REQUEST['format']=='xml')?$this->response($this->publicxml($posts_data), 200):$this->response($this->publicjson($posts_data), 200);        }        ////////////////// End Code To Get Total Count ///////////////////                ////////////////// Code To Get Search Name List //////////////////        public function get_search_name_list($type, $conn){            if($type=='name'){                $query="SELECT DISTINCT first_name, last_name FROM user_master WHERE id<>1";                $result = $this->retrive_data($query,$conn);                $result_count = mysqli_num_rows($result);                $posts = '';                if($result_count>0){                    for($i=0;$i<$result_count;$i++){                        $data=  mysqli_fetch_assoc($result);                         $name = $data['first_name'].' '.$data['last_name'];                        $posts['searchlist'][$i]['name']=$name;                    }                    $message = array("status" => "1", "msg" => "Got the list successfully");                    $posts_data=array_merge($posts,$message);                    ($_REQUEST['format']=='xml')?$this->response($this->publicxml($posts_data), 200):$this->response($this->publicjson($posts_data), 200);                }                else{                    $message = array('status' => "0", "msg" => "Doctors Not Found");                    ($_REQUEST['format'] == 'xml') ? $this->response($this->xml($message), 200) : $this->response($this->json($message), 200);                }            }            else if($type=='speciality'){                $query = "SELECT DISTINCT speciality_name FROM speciality_master";                $result = $this->retrive_data($query,$conn);                $result_count = mysqli_num_rows($result);                if($result_count>0){                    for($i=0;$i<$result_count;$i++){                        $data=  mysqli_fetch_assoc($result);                        $posts['searchlist'][$i]['speciality_name']=$data['speciality_name'];                    }                    $message = array("status" => "1", "msg" => "Got the list successfully");                    $posts_data=array_merge($posts,$message);                    ($_REQUEST['format']=='xml')?$this->response($this->publicxml($posts_data), 200):$this->response($this->publicjson($posts_data), 200);                }                else{                    $message = array('status' => "0", "msg" => "Specialities Not Found");                    ($_REQUEST['format'] == 'xml') ? $this->response($this->xml($message), 200) : $this->response($this->json($message), 200);                }            }            else if($type=='association'){                $query = "SELECT DISTINCT association_name FROM association_master";                $result = $this->retrive_data($query,$conn);                $result_count = mysqli_num_rows($result);                if($result_count>0){                    for($i=0;$i<$result_count;$i++){                        $data=  mysqli_fetch_assoc($result);                        $posts['searchlist'][$i]['association_name']=$data['association_name'];                    }                    $message = array("status" => "1", "msg" => "Got the list successfully");                    $posts_data=array_merge($posts,$message);                    ($_REQUEST['format']=='xml')?$this->response($this->publicxml($posts_data), 200):$this->response($this->publicjson($posts_data), 200);                }                else{                    $message = array('status' => "0", "msg" => "Associations Not Found");                    ($_REQUEST['format'] == 'xml') ? $this->response($this->xml($message), 200) : $this->response($this->json($message), 200);                }            }            else{                $message = array('status' => "0", "msg" => "Entered Wrong Type");                ($_REQUEST['format'] == 'xml') ? $this->response($this->xml($message), 200) : $this->response($this->json($message), 200);            }        }        ////////////////// End Code To Get Search Name List /////////////////                ////////////////// Code To Search By Type ///////////////////////        public function get_search($user_id, $keyword, $type, $latitude, $longitude, $page_no, $conn){            if($type=='name'){                $arr = explode(" ",$keyword);                $first_name = $arr[0];                $last_name = $arr[1];                $query = "SELECT DISTINCT id, custom_id, first_name, last_name, country, city, state, profile_pic_path                           FROM user_master WHERE (first_name LIKE '%$first_name%' AND last_name LIKE '%$last_name%') OR (first_name LIKE '%$last_name%' AND last_name LIKE '%$first_name%') AND custom_id<>''";            }            else if($type=='speciality'){                $query = "SELECT DISTINCT um.id as id, custom_id, first_name, last_name, country, city, state, profile_pic_path                          FROM user_master um INNER JOIN speciality_master sm                          ON um.id=sm.user_id WHERE sm.speciality_name LIKE '%$keyword%' AND um.custom_id<>''";            }            else if($type=='association'){                $query = "SELECT DISTINCT um.id as id, custom_id, first_name, last_name, country, city, state, profile_pic_path                           FROM user_master um INNER JOIN association_master am                          ON um.id=am.user_id WHERE am.association_name LIKE '%$keyword%' AND um.custom_id<>''";            }            $result = $this->retrive_data($query,$conn);            $result_count = mysqli_num_rows($result);            $end_limit = ($page_no*20)-1;            $start_limit = $end_limit-19;            if($result_count>0 && $result_count>$start_limit){                $loop_limit = $result_count-$start_limit;                // Seek to row number based on start limit                mysqli_data_seek($result,$start_limit);                for($i=0;$i<$loop_limit;$i++){                    $data=  mysqli_fetch_assoc($result);                    $uid = $data['id'];                    $posts['search'][$i]['custom_id']=$data['custom_id'];                    $posts['search'][$i]['first_name']=$data['first_name'];                    $posts['search'][$i]['last_name']=$data['last_name'];                    $posts['search'][$i]['country']=$data['country'];                    $posts['search'][$i]['city']=$data['city'];                    $posts['search'][$i]['state']=$data['state'];                    $posts['search'][$i]['profile_pic_path']=$data['profile_pic_path'];                    // Get Top Education                    $query_education = "SELECT school FROM education_master WHERE user_id = '$uid' ORDER BY attended_end_date DESC limit 1";                    $result_education = $this->retrive_data($query_education,$conn);                    $result_count_education = mysqli_num_rows($result_education);                    if($result_count_education==1){                        $data_education=  mysqli_fetch_assoc($result_education);                        $posts['search'][$i]['top_education_name']=$data_education['school'];                    }                    else{                        $posts['search'][$i]['top_education_name']=NULL;                    }                    // Get Top Association                    $query_association = "SELECT association_name FROM association_master WHERE user_id = '$uid' ORDER BY time_period_end_date DESC limit 1";                    $result_association = $this->retrive_data($query_association,$conn);                    $result_count_association = mysqli_num_rows($result_association);                    if($result_count_association==1){                        $data_association =  mysqli_fetch_assoc($result_association);                        $posts['search'][$i]['top_association_name']=$data_association['association_name'];                    }                    else{                        $posts['search'][$i]['top_association_name']=NULL;                    }                    // Get Specialities                    $query_speciality = "SELECT speciality_name FROM speciality_master WHERE user_id='$uid'";                    $result_speciality = $this->retrive_data($query_speciality,$conn);                    $result_count_speciality = mysqli_num_rows($result_speciality);                    if($result_count_speciality>0){                        for($j=0;$j<$result_count_speciality;$j++){                            $data_speciality = mysqli_fetch_assoc($result_speciality);                            $posts['search'][$i]['speciality'][$j]['speciality_name'] = $data_speciality['speciality_name'];                        }                    }                    else{                        $posts['search'][$i]['speciality']=NULL;                    }                    // Get Freind status                    $query_find = "SELECT * FROM connection WHERE (requester_id='$user_id' AND requestee_id='$uid' AND approved='1') OR (requester_id='$uid' AND requestee_id='$user_id' AND approved='1')";                    $result_find = $this->retrive_data($query_find, $conn);                    $result_count_find = mysqli_num_rows($result_find);                    if($result_count_find==1){                        $friend_status = 1;                    }                    else{                        $friend_status = 0;                    }                    $posts['search'][$i]['friend_status']=$friend_status;                    // End                }                // Free result set                mysqli_free_result($result);                $message = array("status" => "1", "msg" => "Got the list successfully");                $posts_data=array_merge($posts,$message);                ($_REQUEST['format']=='xml')?$this->response($this->publicxml($posts_data), 200):$this->response($this->publicjson($posts_data), 200);            }            else{                $message = array('status' => "0", "msg" => "Result Not Found");                ($_REQUEST['format'] == 'xml') ? $this->response($this->xml($message), 200) : $this->response($this->json($message), 200);            }        }        ////////////////// End Code To Search By Type /////////////////////                ////////////////////// Code To Get Friend List ////////////////////////        public function get_friend_list($discussion_id, $user_id, $status, $conn){//            if($status==''){//                $array_name = 'friendlist';//            }//            else if($status==1){//                $array_name = 'acceptfriendlist';//            }//            else if($status==9){//                $array_name = 'pendingfriendlist';//            }//            else{//                $array_name = 'declinedfriendlist';//            }            $array_name = 'friendlist';            $query = "SELECT * FROM user_master WHERE id='$user_id'";            $result = $this->retrive_data($query,$conn);            $row_count = mysqli_num_rows($result);            if($row_count>0){               if($status!=''){                   $query = "SELECT ((requester_id+requestee_id)-$user_id) as list                        FROM connection WHERE (requester_id = $user_id OR requestee_id = $user_id) AND approved = '$status'";               }               else{                   $query = "SELECT ((requester_id+requestee_id)-$user_id) as list                        FROM connection WHERE (requester_id = $user_id OR requestee_id = $user_id)";               }//               $query = "SELECT ((requester_id+requestee_id)-$user_id) as list//                        FROM connection//                        WHERE (requester_id = $user_id OR requestee_id = $user_id) AND approved = '$status'";               $result=$this->retrive_data($query,$conn);               $row_count = mysqli_num_rows($result);               if($row_count>0){                   for($i=0;$i<$row_count;$i++){                       $data = mysqli_fetch_assoc($result);                       $uid = $data['list'];                       if($status==1 && $discussion_id!=''){                           $query_which = "SELECT * FROM discussion_member_mapping WHERE discussion_id='$discussion_id' AND member_id='$uid' AND status=1";                           $result_which=$this->retrive_data($query_which,$conn);                           $row_count_which = mysqli_num_rows($result_which);                           if($row_count_which>0){                               continue;                           }                       }                       $query_list = "SELECT id, first_name, last_name, profile_pic_path FROM user_master WHERE id='$uid'";                       $result_list = $this->retrive_data($query_list,$conn);                       $row_count_list = mysqli_num_rows($result_list);                       if($row_count_list==1){                           $query_speciality = "SELECT speciality_name FROM speciality_master WHERE user_id = '$uid'";                           $result_speciality = $this->retrive_data($query_speciality,$conn);                           $row_count_speciality = mysqli_num_rows($result_speciality);                           if($row_count_speciality>0){                               for($j=0;$j<$row_count_speciality;$j++){                                   $data_speciality = mysqli_fetch_assoc($result_speciality);                                   $posts[$array_name][$i]['speciality'][$j]['speciality_name'] = $data_speciality['speciality_name'];                               }                           }                           else{                               $posts[$array_name][$i]['speciality'] = NULL;                           }                           $data_list = mysqli_fetch_assoc($result_list);                           $posts[$array_name][$i]['user_id'] = $data_list['id'];                           $posts[$array_name][$i]['first_name'] = $data_list['first_name'];                           $posts[$array_name][$i]['last_name'] = $data_list['last_name'];                           $posts[$array_name][$i]['profile_pic_path'] = $data_list['profile_pic_path'];                       }                   }                   $message = array("status" => "1", "msg" => "Got the list successfully");                   $post_data=  array_merge($posts,$message);                   ($_REQUEST['format']=='xml')?$this->response($this->publicxml($post_data), 200):$this->response($this->publicjson($post_data), 200);               }               else{                   $error = array('status' => "0", "msg" => "Friend List Not Found");                   ($_REQUEST['format']=='xml')?$this->response($this->publicxml($error), 200):$this->response($this->publicjson($error), 200);               }            }            else{               $error = array('status' => "0", "msg" => "User Not Exist");               ($_REQUEST['format']=='xml')?$this->response($this->publicxml($error), 200):$this->response($this->publicjson($error), 200);            }        }        ////////////////////// End Code To Get Friend List /////////////////////                ////////////////////// Code To Get Group Details ///////////////////////        public function get_group_details($group_id, $conn){            $query = "SELECT * FROM group_master WHERE id='$group_id'";            $result = $this->retrive_data($query,$conn);            $row_count = mysqli_num_rows($result);            if($row_count==1){                $data = mysqli_fetch_assoc($result);                $owner_id = $data['owner_id'];                $posts['group_name'] = $data['name'];                $posts['group_description'] = $data['description'];                $posts['group_pic'] = $data['group_pic'];                $posts['created_on'] = $data['datetime'];                $posts['group_status'] = $data['status'];                $query_user = "SELECT member_id, first_name, last_name FROM user_master um INNER JOIN group_member_mapping gm                    ON gm.member_id=um.id WHERE gm.group_id='$group_id' AND gm.status=1";                $result_user = $this->retrive_data($query_user,$conn);                $row_count_user = mysqli_num_rows($result_user);                if($row_count_user>0){                    for($i=0;$i<$row_count_user;$i++){                        $data_user = mysqli_fetch_assoc($result_user);                        $member_id = $data_user['member_id'];                        $posts['members'][$i]['member_id'] = $data_user['member_id'];                        $posts['members'][$i]['first_name'] = $data_user['first_name'];                        $posts['members'][$i]['last_name'] = $data_user['last_name'];                        if($member_id==$owner_id){                            $posts['members'][$i]['owner_status'] = 1;                        }                        else{                            $posts['members'][$i]['owner_status'] = 0;                        }                    }                }                else{                    $posts['members'] = NULL;                }                $message = array("status" => "1", "msg" => "Got the list successfully");                $post_data=  array_merge($posts,$message);                ($_REQUEST['format']=='xml')?$this->response($this->publicxml($post_data), 200):$this->response($this->publicjson($post_data), 200);            }            else{               $error = array('status' => "0", "msg" => "Group Not Exist");               ($_REQUEST['format']=='xml')?$this->response($this->publicxml($error), 200):$this->response($this->publicjson($error), 200);            }        }        ////////////////////// End Code To Get Group Details /////////////////////                ////////////////////// Code To Get Discussion Details //////////////////////        public function get_discussion_details($discussion_id, $conn){            $query = "SELECT * FROM discussion_master WHERE id='$discussion_id'";            $result = $this->retrive_data($query,$conn);            $row_count = mysqli_num_rows($result);            if($row_count==1){                $data = mysqli_fetch_assoc($result);                $owner_id = $data['owner_id'];                $posts['discussion_name'] = $data['name'];                $posts['discussion_description'] = $data['description'];                $posts['discussion_pic'] = $data['discussion_pic'];                $posts['created_on'] = $data['datetime'];                $posts['discussion_status'] = $data['status'];                $query_user = "SELECT member_id, first_name, last_name FROM user_master um INNER JOIN discussion_member_mapping dm                    ON dm.member_id=um.id WHERE dm.discussion_id='$discussion_id' AND dm.status=1";                $result_user = $this->retrive_data($query_user,$conn);                $row_count_user = mysqli_num_rows($result_user);                if($row_count_user>0){                    for($i=0;$i<$row_count_user;$i++){                        $data_user = mysqli_fetch_assoc($result_user);                        $member_id = $data_user['member_id'];                        $posts['members'][$i]['member_id'] = $data_user['member_id'];                        $posts['members'][$i]['first_name'] = $data_user['first_name'];                        $posts['members'][$i]['last_name'] = $data_user['last_name'];                        if($member_id==$owner_id){                            $posts['members'][$i]['owner_status'] = 1;                        }                        else{                            $posts['members'][$i]['owner_status'] = 0;                        }                    }                }                else{                    $posts['members'] = NULL;                }                $message = array("status" => "1", "msg" => "Got the list successfully");                $post_data=  array_merge($posts,$message);                ($_REQUEST['format']=='xml')?$this->response($this->publicxml($post_data), 200):$this->response($this->publicjson($post_data), 200);            }            else{               $error = array('status' => "0", "msg" => "Discussion Not Exist");               ($_REQUEST['format']=='xml')?$this->response($this->publicxml($error), 200):$this->response($this->publicjson($error), 200);            }        }        ////////////////////// End Code To Get Discussion Details ////////////////////             //////////////////// Execute query /////////////////////////////////////////////        public function retrive_data($query,$conn){            if(isset($query))                return mysqli_query($conn,$query);            else                return false;        }        //////////////////// End Code For Execute Query ////////////////////////////////        ////////////////////////////////////////////////////////////////////////////////        ////////////////////////////// Encode Array into JSON///////////////////////////        ////////////////////////////////////////////////////////////////////////////////                public function publicjson($data){            return $this->json($data);        }        public function publicxml($posts){            return $this->xml($posts);        }        public function json($data){            header('Content-type: application/json');            return json_encode(array('posts'=>$data));        }		                ////////////////////////////////////////////////////////////////////////////////        ///////////////////////////Code For Xml/////////////////////////////////////////        ////////////////////////////////////////////////////////////////////////////////        private function xml($posts){           if(is_array($posts)){                         $data='';                        header('Content-type: text/xml');                        echo '<posts>';                        foreach($posts as $index => $post){                            if(! is_array($post)){                                     echo '<',$index,'>',htmlentities($post),'</',$index,'>';                            }else if(is_array($post)){                                  foreach($post as $key => $value) {                                       echo '<',$key,'>';                                      if(! is_array($value)){                                         //echo '<',$key,'>',htmlentities($value),'</',$key,'>';                                         echo htmlentities($value);                                       }else if(is_array($value)){                                             foreach($value as $tag => $val){                                                echo '<',$tag,'>',htmlentities($val),'</',$tag,'>';                                            }                                      }                                      echo '</',$key,'>';                                  }                              }                         } echo '</posts>';            }         }        /////////////////////////////////Ending code for Xml///////////////////////////                               //Store Login History} // end class?>